[data Char where,data Double where,type String = ([((Char))]),type FilePath = (String),data Float where,data Handle where,data IO a where,data Integer where,data ShortByteString where,data Word where,data Word16 where,data Word32 where,data Word64 where,data Word8 where]
[data Char where,data Double where,type String = ([((Char))]),type FilePath = (String),data Float where,data Handle where,data IO a where,data Integer where,data ShortByteString where,data Word where,data Word16 where,data Word32 where,data Word64 where,data Word8 where]
["void","ByteString","Int64","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64BE arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64LE arg0)
************************************************
["void","ByteString","Int64","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64HexFixed arg0)
************************************************
["void","ByteString","Int64","_v"]
*******************SOLUTION*********************
SOLUTION: Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty
************************************************
["void","Bool","List Maybe Bool","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","Bool","List Maybe Bool","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","Bool","List Maybe Bool","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.null arg0
************************************************
["void","List Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg1 arg1 (GHC.List.null arg0)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg1 arg1 (GHC.List.null arg0)
************************************************
["void","_v"]
<<timeout>>
["void","List Maybe a","_v","a"]
<<timeout>>
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg1 arg1 (GHC.List.null arg0)
************************************************
["void","List Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg1 arg1 (GHC.List.null arg0)
************************************************
["void","Pair a a","Pair b b","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: (,) (arg0 (fst arg1)) (arg0 (snd arg1))
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
<<timeout>>
["void","_v"]
*******************SOLUTION*********************
SOLUTION: (,) (arg0 (fst arg1)) (arg0 (snd arg1))
************************************************
["void","Pair a a","Pair b b","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: (,) (arg0 (fst arg1)) (arg0 (snd arg1))
************************************************
["void","_v"]
<<timeout>>
["void","Pair a a","Pair b b","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: (,) (arg0 (fst arg1)) (arg0 (snd arg1))
************************************************
["void","Pair Pair a c b","_v","a","b","c","d"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b","c","d"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","Pair Pair a c b","_v","a","b","c","d"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","Pair Pair a c b","_v","a","b","c","d"]
*******************SOLUTION*********************
SOLUTION: arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)
************************************************
["void","Int","List a","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length (GHC.List.zip arg0 arg1)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((GHC.List.++) arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length (GHC.List.zip arg0 arg1)
************************************************
["void","Int","List a","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length (GHC.List.zip arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length (GHC.List.zip arg0 arg1)
************************************************
["void","Int","List a","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length (GHC.List.zip arg0 arg1)
************************************************
["void","Int","List Int","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.replicate arg0 arg0
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.drop arg0 []
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.maybeToList (Data.Maybe.Just arg0)
************************************************
["void","Int","List Int","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.replicate arg0 arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.maybeToList (Data.Maybe.Just arg0)
************************************************
["void","Int","List Int","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.replicate arg0 arg0
************************************************
["void","_v","a","b","c"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b","c"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","_v","a","b","c"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","_v","a","b","c"]
*******************SOLUTION*********************
SOLUTION: arg2 arg0 (arg1 arg0)
************************************************
["void","List a","Pair List a List a","_v","a"]
<<timeout>>
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List a","Pair List a List a","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.splitAt (GHC.List.length (Text.Show.show arg1)) arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: (,) ((:) arg1 []) arg0
************************************************
["void","List a","Pair List a List a","_v","a"]
*******************SOLUTION*********************
SOLUTION: (,) ((:) arg1 []) arg0
************************************************
["void","_v","t","t1","t2"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","t","t1","t2"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","_v","t","t1","t2"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","_v","t","t1","t2"]
*******************SOLUTION*********************
SOLUTION: arg2 (arg1 arg0) arg0
************************************************
["void","Char","List Char","List List Char","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.replicate (GHC.List.length arg1) (Text.Show.show arg0)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.maybeToList (Data.Maybe.Just (Text.Show.showChar arg0 arg1))
************************************************
["void","_v"]
<<timeout>>
["void","Char","List Char","List List Char","_v"]
*******************SOLUTION*********************
SOLUTION: (:) ((:) arg0 arg1) []
************************************************
["void","_v"]
<<timeout>>
["void","Char","List Char","List List Char","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.replicate (GHC.List.length (Text.Show.show arg0)) arg1
************************************************
["void","List a","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","List a","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","List a","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.listToMaybe ((:) arg1 arg0)
************************************************
["void","Int","List a","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","Int","List a","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","Int","List a","_v","a"]
*******************SOLUTION*********************
SOLUTION: GHC.List.length ((:) arg0 arg1)
************************************************
["void","Either a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.False
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)
************************************************
["void","Either a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.False
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)
************************************************
["void","Either a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)
************************************************
["void","Pair a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.True
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.True
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)
************************************************
["void","Pair a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.True
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.True
************************************************
["void","Pair a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Bool.bool arg0 arg1 Data.Bool.otherwise
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.False)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1))
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: GHC.List.lookup ((,) arg0 arg1) []
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.False)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.True)
************************************************
["void","Maybe a","_v","a"]
*******************SOLUTION*********************
SOLUTION: Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.otherwise)
************************************************
["void","Either a List b","List Either a b","_v"]
<<timeout>>
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
*******************SOLUTION*********************
SOLUTION: Data.Either.Right (Data.Either.rights arg0)
************************************************
["void","_v"]
<<timeout>>
["void","Either a List b","List Either a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Either.Right (Data.Either.rights arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Either.Right (Data.Either.rights arg0)
************************************************
["void","Either a List b","List Either a b","_v"]
*******************SOLUTION*********************
SOLUTION: Data.Either.Right (Data.Either.rights arg0)
************************************************
["void","List Char","List List Char","_v","a"]
*******************SOLUTION*********************
SOLUTION: Text.Show.show ((,) arg1 arg0)
************************************************
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a"]
*******************SOLUTION*********************
SOLUTION: Text.Show.show ((,) arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Text.Show.shows arg1 (Text.Show.show arg0)
************************************************
["void","List Char","List List Char","_v","a"]
*******************SOLUTION*********************
SOLUTION: Text.Show.show ((,) arg1 arg0)
************************************************
["void","_v"]
*******************SOLUTION*********************
SOLUTION: Text.Show.shows arg0 (Text.Show.show arg1)
************************************************
["void","List Char","List List Char","_v","a"]
*******************SOLUTION*********************
SOLUTION: Text.Show.show ((,) arg0 arg1)
************************************************
["void","List Pair a b","_v","a","b"]
<<timeout>>
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List Pair a b","_v","a","b"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List Pair a b","_v","a","b"]
<<timeout>>
["void","List Pair a b","List a","_v","a","b"]
<<timeout>>
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List Pair a b","List a","_v","a","b"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List Pair a b","List a","_v","a","b"]
<<timeout>>
["void","List List Pair a b","List a","List b","_v"]
<<timeout>>
["void","Bool","Builder","ByteString","Char","Double","Either _v1 _v2","Float","Handle","IO _v1","Int","Int16","Int32","Int64","Int8","Integer","List _v1","Maybe _v1","Pair _v1 _v2","ShortByteString","Unit","Word","Word16","Word32","Word64","Word8","_v","a","b"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List List Pair a b","List a","List b","_v"]
<<timeout>>
["void","_v"]
<<timeout>>
["void","List List Pair a b","List a","List b","_v"]
*******************SOLUTION*********************
SOLUTION: (:) (GHC.List.zip arg1 arg0) []
************************************************
[ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty", resTFirstSoln = 2.2215841989999996, resTEncFirstSoln = 0.9080407770000001, resTSolveFirstSoln = 1.2046872149999999, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [487,329,303,279], resTypes = [7,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64BE arg0)", resTFirstSoln = 10.491052823, resTEncFirstSoln = 4.7776614429999995, resTSolveFirstSoln = 5.711089875, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [1797,1797], resTypes = [26,26], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64LE arg0)", resTFirstSoln = 3.491634002, resTEncFirstSoln = 0.9861836340000001, resTSolveFirstSoln = 2.382795986, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [495,352,248,219,197,170], resTypes = [7,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty", resTFirstSoln = 2.275909036, resTEncFirstSoln = 0.9256936119999999, resTSolveFirstSoln = 1.23353018, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [487,329,303,279], resTypes = [7,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Builder.toLazyByteString (Data.ByteString.Builder.int64HexFixed arg0)", resTFirstSoln = 5.072199509, resTEncFirstSoln = 1.071711562, resTSolveFirstSoln = 3.8096507649999998, resLenFirstSoln = 2, resRefinementSteps = 7, resTransitions = [490,387,352,248,219,197,170], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "intToBytestring", queryStr = "Int64 -> ByteString", result = Result {resSolutionOrError = Right "Just Data.ByteString.Lazy.take arg0 Data.ByteString.Lazy.empty", resTFirstSoln = 0.413011897, resTEncFirstSoln = 0.171641977, resTSolveFirstSoln = 0.23726528000000002, resLenFirstSoln = 2, resRefinementSteps = 18, resTransitions = [279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279], resTypes = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 9.1985547e-2, resTEncFirstSoln = 8.5301691e-2, resTSolveFirstSoln = 6.341654e-3, resLenFirstSoln = 1, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 5.926325469, resTEncFirstSoln = 4.834632585, resTSolveFirstSoln = 1.08999646, resLenFirstSoln = 1, resRefinementSteps = 2, resTransitions = [1797,1797], resTypes = [26,26], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 0.374262258, resTEncFirstSoln = 0.283688023, resTSolveFirstSoln = 5.1143081e-2, resLenFirstSoln = 1, resRefinementSteps = 3, resTransitions = [358,249,170], resTypes = [4,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 0.114273295, resTEncFirstSoln = 0.107168262, resTSolveFirstSoln = 6.349584e-3, resLenFirstSoln = 1, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 0.230905806, resTEncFirstSoln = 0.17672830299999998, resTSolveFirstSoln = 3.4259891e-2, resLenFirstSoln = 1, resRefinementSteps = 2, resTransitions = [320,170], resTypes = [3,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "conjunctMaybe", queryStr = "List (Maybe Bool) -> Bool", result = Result {resSolutionOrError = Right "Just GHC.List.null arg0", resTFirstSoln = 0.128407422, resTEncFirstSoln = 0.121707804, resTSolveFirstSoln = 6.380389e-3, resLenFirstSoln = 1, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg1 arg1 (GHC.List.null arg0)", resTFirstSoln = 28.617431476999997, resTEncFirstSoln = 3.288569733, resTSolveFirstSoln = 24.061812941, resLenFirstSoln = 3, resRefinementSteps = 9, resTransitions = [1085,844,785,602,521,454,418,258,234], resTypes = [14,12,11,9,8,7,6,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg1 arg1 (GHC.List.null arg0)", resTFirstSoln = 29.619134038, resTEncFirstSoln = 6.122263506, resTSolveFirstSoln = 23.491167279, resLenFirstSoln = 3, resRefinementSteps = 8, resTransitions = [1878,1878,1878,1878,1878,1878,1878,1878], resTypes = [27,27,27,27,27,27,27,27], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg1 arg1 (GHC.List.null arg0)", resTFirstSoln = 26.702307995, resTEncFirstSoln = 3.417200087, resTSolveFirstSoln = 22.141816380999998, resLenFirstSoln = 3, resRefinementSteps = 12, resTransitions = [1085,717,626,573,530,482,420,380,348,275,188,170], resTypes = [14,11,10,9,8,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "firstMaybe", queryStr = "a -> List (Maybe a) -> a", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg1 arg1 (GHC.List.null arg0)", resTFirstSoln = 2.406737518, resTEncFirstSoln = 0.136280143, resTSolveFirstSoln = 2.167962781000001, resLenFirstSoln = 3, resRefinementSteps = 363, resTransitionsresTypes = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Right "Just (,) (arg0 (fst arg1)) (arg0 (snd arg1))", resTFirstSoln = 35.362499944999996, resTEncFirstSoln = 3.3158974050000003, resTSolveFirstSoln = 31.22048058, resLenFirstSoln = 4, resRefinementSteps = 8, resTransitions = [790,631,544,491,356,320,290,260], resTypes = [13,11,10,9,8,7,6,5], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Right "Just (,) (arg0 (fst arg1)) (arg0 (snd arg1))", resTFirstSoln = 9.454053509, resTEncFirstSoln = 1.135736089, resTSolveFirstSoln = 8.069504882, resLenFirstSoln = 3, resRefinementSteps = 7, resTransitions = [541,402,346,308,278,191,171], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Right "Just (,) (arg0 (fst arg1)) (arg0 (snd arg1))", resTFirstSoln = 37.861514307, resTEncFirstSoln = 3.062478766, resTSolveFirstSoln = 33.861866628, resLenFirstSoln = 4, resRefinementSteps = 8, resTransitions = [790,587,544,400,361,328,290,260], resTypes = [13,11,10,9,8,7,6,5], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "both", queryStr = "Pair a a -> (a -> b) -> Pair b b", result = Result {resSolutionOrError = Right "Just (,) (arg0 (fst arg1)) (arg0 (snd arg1))", resTFirstSoln = 1.794425133, resTEncFirstSoln = 0.24665994499999996, resTSolveFirstSoln = 1.5382829299999998, resLenFirstSoln = 4, resRefinementSteps = 32, resTransitions = [260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260], resTypes = [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 1.509956064, resTEncFirstSoln = 0.40894130300000003, resTSolveFirstSoln = 1.030006891, resLenFirstSoln = 3, resRefinementSteps = 1, resTransitions = [358], resTypes = [8], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 24.053132028, resTEncFirstSoln = 9.754353984999998, resTSolveFirstSoln = 14.284685192000001, resLenFirstSoln = 3, resRefinementSteps = 1, resTransitions = [2141], resTypes = [30], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 1.161441345, resTEncFirstSoln = 0.24634019899999998, resTSolveFirstSoln = 0.837012323, resLenFirstSoln = 3, resRefinementSteps = 3, resTransitions = [302,191,171], resTypes = [6,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 1.574275329, resTEncFirstSoln = 0.47715719199999995, resTSolveFirstSoln = 1.025993027, resLenFirstSoln = 3, resRefinementSteps = 1, resTransitions = [358], resTypes = [8], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 0.9099979460000001, resTEncFirstSoln = 0.243904691, resTSolveFirstSoln = 0.54438767, resLenFirstSoln = 3, resRefinementSteps = 3, resTransitions = [302,191,171], resTypes = [6,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q07", queryStr = "(a -> b -> c -> d) -> (a, c, b) -> d", result = Result {resSolutionOrError = Right "Just arg1 (fst (fst arg0)) (snd arg0) (snd (fst arg0))", resTFirstSoln = 0.654132932, resTEncFirstSoln = 0.215378132, resTSolveFirstSoln = 0.43162506799999995, resLenFirstSoln = 3, resRefinementSteps = 7, resTransitions = [290,290,290,290,290,290,290], resTypes = [6,6,6,6,6,6,6], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 0.209398774, resTEncFirstSoln = 0.12131345599999999, resTSolveFirstSoln = 7.3387225e-2, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [237], resTypes = [4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 12.238214589, resTEncFirstSoln = 5.499284422000001, resTSolveFirstSoln = 6.734501700999998, resLenFirstSoln = 2, resRefinementSteps = 5, resTransitions = [1878,1878,1878,1878,1878], resTypes = [27,27,27,27,27], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 0.306796241, resTEncFirstSoln = 0.206997774, resTSolveFirstSoln = 7.0269552e-2, resLenFirstSoln = 2, resRefinementSteps = 3, resTransitions = [239,193,170], resTypes = [4,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 0.20966411000000001, resTEncFirstSoln = 0.12061196000000002, resTSolveFirstSoln = 7.4042815e-2, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [237], resTypes = [4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 0.232941697, resTEncFirstSoln = 0.13351606900000001, resTSolveFirstSoln = 7.0022427e-2, resLenFirstSoln = 2, resRefinementSteps = 3, resTransitions = [239,193,170], resTypes = [4,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q08", queryStr = "Maybe a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 arg1)", resTFirstSoln = 0.153410097, resTEncFirstSoln = 8.825445300000001e-2, resTSolveFirstSoln = 6.4225056e-2, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [213,213], resTypes = [3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length (GHC.List.zip arg0 arg1)", resTFirstSoln = 1.298562562, resTEncFirstSoln = 0.553134975, resTSolveFirstSoln = 0.7020398, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [407,249], resTypes = [5,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((GHC.List.++) arg0 arg1)", resTFirstSoln = 8.176762376, resTEncFirstSoln = 5.600029289999999, resTSolveFirstSoln = 2.5750784500000004, resLenFirstSoln = 2, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length (GHC.List.zip arg0 arg1)", resTFirstSoln = 9.360213483, resTEncFirstSoln = 2.266528021, resTSolveFirstSoln = 6.727123472000001, resLenFirstSoln = 2, resRefinementSteps = 8, resTransitions = [775,551,505,469,349,277,249,170], resTypes = [9,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length (GHC.List.zip arg0 arg1)", resTFirstSoln = 1.313973177, resTEncFirstSoln = 0.5444895550000001, resTSolveFirstSoln = 0.723373043, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [407,249], resTypes = [5,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length (GHC.List.zip arg0 arg1)", resTFirstSoln = 4.941727406, resTEncFirstSoln = 0.857756308, resTSolveFirstSoln = 3.909367975, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [534,381,349,277,249,170], resTypes = [7,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q09", queryStr = "List (a) -> List (a) -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length (GHC.List.zip arg0 arg1)", resTFirstSoln = 0.30511325300000003, resTEncFirstSoln = 0.20723678099999998, resTSolveFirstSoln = 9.5574275e-2, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [249,249], resTypes = [3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just GHC.List.replicate arg0 arg0", resTFirstSoln = 1.443649353, resTEncFirstSoln = 0.910084261, resTSolveFirstSoln = 0.39001818, resLenFirstSoln = 2, resRefinementSteps = 5, resTransitions = [500,351,314,286,252], resTypes = [8,6,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just GHC.List.drop arg0 []", resTFirstSoln = 16.015218362, resTEncFirstSoln = 4.793210856, resTSolveFirstSoln = 11.219271312, resLenFirstSoln = 2, resRefinementSteps = 3, resTransitions = [1797,1797,1797], resTypes = [26,26,26], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just Data.Maybe.maybeToList (Data.Maybe.Just arg0)", resTFirstSoln = 2.8196450970000004, resTEncFirstSoln = 0.9707300379999999, resTSolveFirstSoln = 1.6803136909999998, resLenFirstSoln = 2, resRefinementSteps = 7, resTransitions = [514,370,330,299,270,199,170], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just GHC.List.replicate arg0 arg0", resTFirstSoln = 1.447905284, resTEncFirstSoln = 0.835498426, resTSolveFirstSoln = 0.404523914, resLenFirstSoln = 2, resRefinementSteps = 5, resTransitions = [500,351,314,286,252], resTypes = [8,6,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just Data.Maybe.maybeToList (Data.Maybe.Just arg0)", resTFirstSoln = 2.785953599, resTEncFirstSoln = 0.93875006, resTSolveFirstSoln = 1.677151878, resLenFirstSoln = 2, resRefinementSteps = 7, resTransitions = [514,370,330,299,270,199,170], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q12", queryStr = "Int -> List Int", result = Result {resSolutionOrError = Right "Just GHC.List.replicate arg0 arg0", resTFirstSoln = 0.182622948, resTEncFirstSoln = 0.12143860000000001, resTSolveFirstSoln = 5.9591001e-2, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [252,252,252,252,252,252], resTypes = [3,3,3,3,3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 5.374023836, resTEncFirstSoln = 1.156649139, resTSolveFirstSoln = 4.090867321, resLenFirstSoln = 3, resRefinementSteps = 4, resTransitions = [542,318,280,236], resTypes = [8,6,5,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 21.558669591, resTEncFirstSoln = 8.100590663, resTSolveFirstSoln = 13.456772388000001, resLenFirstSoln = 3, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 2.752799263, resTEncFirstSoln = 0.689316277, resTSolveFirstSoln = 1.985603372, resLenFirstSoln = 3, resRefinementSteps = 5, resTransitions = [403,253,214,192,172], resTypes = [6,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 5.316674996, resTEncFirstSoln = 1.079474645, resTSolveFirstSoln = 4.108553195, resLenFirstSoln = 3, resRefinementSteps = 4, resTransitions = [542,318,280,236], resTypes = [8,6,5,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 6.8543932110000005, resTEncFirstSoln = 1.297285781, resTSolveFirstSoln = 5.385271319000001, resLenFirstSoln = 3, resRefinementSteps = 7, resTransitions = [542,403,359,253,214,192,172], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q14", queryStr = "(a -> b -> c) -> (a -> b) -> a -> c", result = Result {resSolutionOrError = Right "Just arg2 arg0 (arg1 arg0)", resTFirstSoln = 0.841876217, resTEncFirstSoln = 0.219015879, resTSolveFirstSoln = 0.6166918980000001, resLenFirstSoln = 3, resRefinementSteps = 21, resTransitions = [236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236], resTypes = [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Right "Just GHC.List.splitAt (GHC.List.length (Text.Show.show arg1)) arg0", resTFirstSoln = 47.920435285, resTEncFirstSoln = 8.113013064, resTSolveFirstSoln = 37.548974152999996, resLenFirstSoln = 3, resRefinementSteps = 17, resTransitions = [1380,1380,1380,1380,1380,1380,1380,1380,984,792,678,502,452,415,335,286,260], resTypes = [20,20,20,20,20,20,20,20,16,13,11,10,9,8,6,5,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Right "Just (,) ((:) arg1 []) arg0", resTFirstSoln = 70.662728113, resTEncFirstSoln = 8.807592778, resTSolveFirstSoln = 59.271884883, resLenFirstSoln = 3, resRefinementSteps = 20, resTransitions = [1474,1474,1474,1474,1474,1474,1474,1474,1240,1024,772,530,462,415,380,304,249,222,188,170], resTypes = [20,20,20,20,20,20,20,20,17,14,13,10,9,8,7,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q15", queryStr = "a -> List (a) -> Pair (List (a)) (List (a))", result = Result {resSolutionOrError = Right "Just (,) ((:) arg1 []) arg0", resTFirstSoln = 9.152914532, resTEncFirstSoln = 0.16989308200000003, resTSolveFirstSoln = 8.820483180999991, resLenFirstSoln = 3, resRefinementSteps = 557, resTransitionsresTypes = [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 0.354794767, resTEncFirstSoln = 0.14786991300000002, resTSolveFirstSoln = 0.206494429, resLenFirstSoln = 3, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 51.780081521, resTEncFirstSoln = 8.695876871, resTSolveFirstSoln = 43.08240793, resLenFirstSoln = 3, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 6.954997473, resTEncFirstSoln = 1.208158093, resTSolveFirstSoln = 5.577595409000001, resLenFirstSoln = 3, resRefinementSteps = 7, resTransitions = [542,367,280,253,214,192,172], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 0.371370031, resTEncFirstSoln = 0.164889053, resTSolveFirstSoln = 0.206060974, resLenFirstSoln = 3, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 1.881352612, resTEncFirstSoln = 0.625838031, resTSolveFirstSoln = 1.178898942, resLenFirstSoln = 3, resRefinementSteps = 5, resTransitions = [367,253,214,192,172], resTypes = [6,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q17", queryStr = "(t2 -> t1 -> t) -> (t1 -> t2) -> t1 -> t", result = Result {resSolutionOrError = Right "Just arg2 (arg1 arg0) arg0", resTFirstSoln = 0.355846631, resTEncFirstSoln = 0.144359283, resTSolveFirstSoln = 0.211033524, resLenFirstSoln = 3, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Right "Just GHC.List.replicate (GHC.List.length arg1) (Text.Show.show arg0)", resTFirstSoln = 46.847856084, resTEncFirstSoln = 5.101615022, resTSolveFirstSoln = 40.52701068699999, resLenFirstSoln = 3, resRefinementSteps = 10, resTransitions = [1262,789,692,573,533,493,455,412,361,333], resTypes = [15,12,11,10,9,8,7,6,5,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Right "Just Data.Maybe.maybeToList (Data.Maybe.Just (Text.Show.showChar arg0 arg1))", resTFirstSoln = 76.38242857200001, resTEncFirstSoln = 5.737502224999999, resTSolveFirstSoln = 70.55633321700002, resLenFirstSoln = 3, resRefinementSteps = 172, resTransitionsresTypesresDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Right "Just (:) ((:) arg0 arg1) []", resTFirstSoln = 29.405597702, resTEncFirstSoln = 2.42460495, resTSolveFirstSoln = 26.337237340999998, resLenFirstSoln = 3, resRefinementSteps = 8, resTransitions = [789,573,533,493,455,412,361,333], resTypes = [12,10,9,8,7,6,5,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q21", queryStr = "String -> Char -> List (String)", result = Result {resSolutionOrError = Right "Just GHC.List.replicate (GHC.List.length (Text.Show.show arg0)) arg1", resTFirstSoln = 15.947779393000001, resTEncFirstSoln = 0.27553276699999996, resTSolveFirstSoln = 15.369446644999977, resLenFirstSoln = 3, resRefinementSteps = 1039, resTransitions = [333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333], resTypes = [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 0.9498301060000001, resTEncFirstSoln = 0.28903306300000003, resTSolveFirstSoln = 0.611922926, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [338,263], resTypes = [6,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 14.176797071, resTEncFirstSoln = 6.02248888, resTSolveFirstSoln = 8.148114211, resLenFirstSoln = 2, resRefinementSteps = 8, resTransitions = [1878,1878,1878,1878,1878,1878,1878,1878], resTypes = [27,27,27,27,27,27,27,27], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 3.263824683, resTEncFirstSoln = 0.9557563469999999, resTSolveFirstSoln = 2.176221982, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [486,402,320,222,188,170], resTypes = [7,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 0.9802968959999999, resTEncFirstSoln = 0.31036673000000004, resTSolveFirstSoln = 0.620605572, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [338,263], resTypes = [6,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 29.758695524, resTEncFirstSoln = 2.6373524329999998, resTSolveFirstSoln = 26.174974860000003, resLenFirstSoln = 2, resRefinementSteps = 12, resTransitions = [963,822,764,663,615,572,439,402,320,222,188,170], resTypes = [13,11,10,9,8,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q22", queryStr = "a -> List (a) -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.listToMaybe ((:) arg1 arg0)", resTFirstSoln = 0.388031799, resTEncFirstSoln = 0.265469202, resTSolveFirstSoln = 0.121239968, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [263,263,263,263], resTypes = [4,4,4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 0.711435672, resTEncFirstSoln = 0.333056695, resTSolveFirstSoln = 0.333140355, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [355,276], resTypes = [6,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 11.843358525, resTEncFirstSoln = 5.743345931, resTSolveFirstSoln = 6.097874132, resLenFirstSoln = 2, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 3.653440996, resTEncFirstSoln = 0.7770063559999999, resTSolveFirstSoln = 2.670550334, resLenFirstSoln = 2, resRefinementSteps = 7, resTransitions = [528,439,355,305,275,249,170], resTypes = [8,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 0.712152678, resTEncFirstSoln = 0.334696696, resTSolveFirstSoln = 0.331402199, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [355,276], resTypes = [6,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 1.4772176769999998, resTEncFirstSoln = 0.634591438, resTSolveFirstSoln = 0.7545106779999999, resLenFirstSoln = 2, resRefinementSteps = 5, resTransitions = [439,320,275,249,170], resTypes = [6,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q24", queryStr = "List (a) -> a -> Int", result = Result {resSolutionOrError = Right "Just GHC.List.length ((:) arg0 arg1)", resTFirstSoln = 0.236441031, resTEncFirstSoln = 0.146338461, resTSolveFirstSoln = 8.8325893e-2, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [276,276,276,276], resTypes = [4,4,4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.False", resTFirstSoln = 2.7411436389999997, resTEncFirstSoln = 1.036067066, resTSolveFirstSoln = 1.4610065300000001, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [540,453,357,251,212,190], resTypes = [8,6,5,4,3,2], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)", resTFirstSoln = 18.228181433, resTEncFirstSoln = 7.082557055, resTSolveFirstSoln = 11.142002675, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [1961,1961], resTypes = [28,28], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)", resTFirstSoln = 0.18120419599999998, resTEncFirstSoln = 9.5935944e-2, resTSolveFirstSoln = 6.6242511e-2, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [212,170], resTypes = [3,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.False", resTFirstSoln = 0.400143472, resTEncFirstSoln = 0.15577087, resTSolveFirstSoln = 0.217467172, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [251,190], resTypes = [4,2], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)", resTFirstSoln = 0.15822815, resTEncFirstSoln = 9.6019029e-2, resTSolveFirstSoln = 4.1544989000000004e-2, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [212,170], resTypes = [3,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q26", queryStr = "Either a b -> Either a b -> Either a b", result = Result {resSolutionOrError = Right "Just Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)", resTFirstSoln = 0.131571379, resTEncFirstSoln = 6.941183e-2, resTSolveFirstSoln = 5.8276919e-2, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [190,190,190,190,190,190], resTypes = [2,2,2,2,2,2], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.True", resTFirstSoln = 0.289570243, resTEncFirstSoln = 0.136719916, resTSolveFirstSoln = 2.8964794000000002e-2, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [212], resTypes = [3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.True", resTFirstSoln = 19.215215481999998, resTEncFirstSoln = 6.858464591, resTSolveFirstSoln = 12.346519552999998, resLenFirstSoln = 2, resRefinementSteps = 6, resTransitions = [1961,1961,1961,1961,1961,1961], resTypes = [28,28,28,28,28,28], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1)", resTFirstSoln = 0.426695846, resTEncFirstSoln = 0.12194201099999999, resTSolveFirstSoln = 0.130724594, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [240,170], resTypes = [4,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.True", resTFirstSoln = 0.13406547600000002, resTEncFirstSoln = 9.2043205e-2, resTSolveFirstSoln = 2.9212328e-2, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [212], resTypes = [3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.True", resTFirstSoln = 0.634363023, resTEncFirstSoln = 0.228656865, resTSolveFirstSoln = 0.3275961, resLenFirstSoln = 2, resRefinementSteps = 3, resTransitions = [334,190,170], resTypes = [7,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q30", queryStr = "Pair a b -> Pair a b -> Pair a b", result = Result {resSolutionOrError = Right "Just Data.Bool.bool arg0 arg1 Data.Bool.otherwise", resTFirstSoln = 0.109253451, resTEncFirstSoln = 6.8840098e-2, resTSolveFirstSoln = 3.9603091e-2, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [190], resTypes = [2], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.False)", resTFirstSoln = 4.330377559, resTEncFirstSoln = 0.945727951, resTSolveFirstSoln = 3.175969023, resLenFirstSoln = 3, resRefinementSteps = 5, resTransitions = [524,294,266,237,213], resTypes = [8,6,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Maybe.fromMaybe arg0 (Data.Maybe.Just arg1))", resTFirstSoln = 39.40280325, resTEncFirstSoln = 6.730212892000001, resTSolveFirstSoln = 32.660300969, resLenFirstSoln = 3, resRefinementSteps = 14, resTransitions = [1878,1878,1878,1878,1878,1878,1878,1878,1878,1878,1878,1878,1878,1878], resTypes = [27,27,27,27,27,27,27,27,27,27,27,27,27,27], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just GHC.List.lookup ((,) arg0 arg1) []", resTFirstSoln = 33.157879967999996, resTEncFirstSoln = 3.284702243000001, resTSolveFirstSoln = 28.391052600000002, resLenFirstSoln = 3, resRefinementSteps = 13, resTransitions = [950,827,733,679,573,532,420,374,337,305,210,188,170], resTypes = [14,12,11,10,9,8,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.False)", resTFirstSoln = 4.553991475, resTEncFirstSoln = 1.096565383, resTSolveFirstSoln = 3.2488394780000003, resLenFirstSoln = 3, resRefinementSteps = 5, resTransitions = [524,294,266,237,213], resTypes = [8,6,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.True)", resTFirstSoln = 8.295619596, resTEncFirstSoln = 1.121586161, resTSolveFirstSoln = 6.853632961000001, resLenFirstSoln = 3, resRefinementSteps = 8, resTransitions = [579,420,374,337,305,210,188,170], resTypes = [9,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q31", queryStr = "a -> a -> Maybe a", result = Result {resSolutionOrError = Right "Just Data.Maybe.Just (Data.Bool.bool arg0 arg1 Data.Bool.otherwise)", resTFirstSoln = 0.6504623810000001, resTEncFirstSoln = 0.113547166, resTSolveFirstSoln = 0.518289838, resLenFirstSoln = 3, resRefinementSteps = 33, resTransitions = [213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213], resTypes = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Right "Just Data.Either.Right (Data.Either.rights arg0)", resTFirstSoln = 20.467213505, resTEncFirstSoln = 6.761272273, resTSolveFirstSoln = 13.695332556999999, resLenFirstSoln = 2, resRefinementSteps = 17, resTransitions = [1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961,1961], resTypes = [28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Right "Just Data.Either.Right (Data.Either.rights arg0)", resTFirstSoln = 28.436117303, resTEncFirstSoln = 5.139102799, resTSolveFirstSoln = 21.647543405, resLenFirstSoln = 2, resRefinementSteps = 9, resTransitions = [1453,865,612,565,494,454,390,352,238], resTypes = [17,12,9,8,7,6,5,4,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Right "Just Data.Either.Right (Data.Either.rights arg0)", resTFirstSoln = 37.605322946, resTEncFirstSoln = 4.96592303, resTSolveFirstSoln = 28.493622498999994, resLenFirstSoln = 2, resRefinementSteps = 21, resTransitions = [1602,1602,1602,1602,1602,1602,1602,1602,1602,1344,1008,804,682,595,497,454,416,357,322,249,170], resTypes = [22,22,22,22,22,22,22,22,22,19,15,12,10,9,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q34", queryStr = "List (Either a b) -> Either a (List (b))", result = Result {resSolutionOrError = Right "Just Data.Either.Right (Data.Either.rights arg0)", resTFirstSoln = 1.823251182, resTEncFirstSoln = 0.11200790299999999, resTSolveFirstSoln = 1.6745050400000003, resLenFirstSoln = 2, resRefinementSteps = 145, resTransitions = [238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238], resTypes = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.show ((,) arg1 arg0)", resTFirstSoln = 0.62733539, resTEncFirstSoln = 0.263304143, resTSolveFirstSoln = 0.34056934, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [347], resTypes = [5], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.show ((,) arg1 arg0)", resTFirstSoln = 12.439423218, resTEncFirstSoln = 6.024167953, resTSolveFirstSoln = 6.412163168, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [1878,1878,1878,1878], resTypes = [27,27,27,27], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.shows arg1 (Text.Show.show arg0)", resTFirstSoln = 8.617840533, resTEncFirstSoln = 1.745648176, resTSolveFirstSoln = 6.435656396999999, resLenFirstSoln = 2, resRefinementSteps = 9, resTransitions = [749,467,406,367,287,261,237,188,170], resTypes = [10,8,7,6,5,4,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.show ((,) arg1 arg0)", resTFirstSoln = 0.634089122, resTEncFirstSoln = 0.263034089, resTSolveFirstSoln = 0.34731033699999997, resLenFirstSoln = 2, resRefinementSteps = 1, resTransitions = [347], resTypes = [5], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.shows arg0 (Text.Show.show arg1)", resTFirstSoln = 0.435221981, resTEncFirstSoln = 0.18377329399999998, resTSolveFirstSoln = 0.196083328, resLenFirstSoln = 2, resRefinementSteps = 4, resTransitions = [287,237,188,170], resTypes = [5,3,2,1], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q37", queryStr = "a -> List String -> String", result = Result {resSolutionOrError = Right "Just Text.Show.show ((,) arg0 arg1)", resTFirstSoln = 0.24862672400000002, resTEncFirstSoln = 0.197312219, resTSolveFirstSoln = 5.0403574e-2, resLenFirstSoln = 2, resRefinementSteps = 2, resTransitions = [319,319], resTypes = [4,4], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q38", queryStr = "List (Pair a b) -> a -> b", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q40", queryStr = "(a -> b) -> List (a) -> List (a,b)", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-Q", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "Sypet-Clone", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-QB", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "TYGAR-0B", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Left Timeout, resTFirstSoln = 0.0, resTEncFirstSoln = 0.0, resTSolveFirstSoln = 0.0, resLenFirstSoln = 0, resRefinementSteps = 0, resTransitions = [], resTypes = [], resDuplicateSymbols = (0,0)}},ResultSummary {envName = "Total", paramName = "No Gar", queryName = "Q41", queryStr = "List (a) -> List (b) -> List (List (Pair a b))", result = Result {resSolutionOrError = Right "Just (:) (GHC.List.zip arg1 arg0) []", resTFirstSoln = 65.724339177, resTEncFirstSoln = 0.517750489, resTSolveFirstSoln = 63.12189698400012, resLenFirstSoln = 3, resRefinementSteps = 5639, resTransitionsresTypes = [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4], resDuplicateSymbols = (0,0)}}]
